{"version":3,"file":"static/js/854.8deac9c4.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage.module.css?7675","pages/ContactsPage.js"],"sourcesContent":["export const getContact = (state) => state.contacts.items;\nexport const getIsLoading = (state) => state.contacts.isLoading;\nexport const getError = (state) => state.contacts.error;\nexport const getFilter = (state) => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"form__basic\":\"ContactForm_form__basic__h+8j-\",\"form__basic__input\":\"ContactForm_form__basic__input__DIBjD\",\"form__button\":\"ContactForm_form__button__MT1Jk\"};","import React from 'react';\n// import { IconButton } from \"react-bootstrap\";\nimport { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\nimport { addContacts } from 'redux/contacts/operations';\nimport { getContact } from 'redux/contacts/selectors.js';\n\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContact);\n\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    console.log('name', name);\n    console.log('value', value);\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleAddContact = async (evt, values) => {\n     evt.preventDefault();\n\n    if (!name.trim()) {\n      return;\n    }\n\nconst contact = {\n      id: nanoid(),\n      name: evt.currentTarget.elements.name.value,\n      number: evt.currentTarget.elements.number.value,\n    };\n\n    // console.log('name', name);\n    // console.log('number', number);\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return Notiflix.Notify.warning(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContacts(contact));\n      Notiflix.Notify.success(`${name} is added!`);\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <form className={css.form__basic} onSubmit={handleAddContact}>\n      <p>Name</p>\n      <input className={css.form__basic__input}\n        type=\"text\"\n        name=\"name\"\n        placeholder='Please, enter name'\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChange}\n      />\n      <p>Number</p>\n      <input className={css.form__basic__input}\n        type=\"tel\"\n        name=\"number\"\n        placeholder='Please, enter number phone'\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleChange}\n      />\n\n      <button type=\"submit\" \n       className={css.form__button}>\n        Add\n      </button>\n     </form>\n  );\n};\n\nexport default ContactForm;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // const ContactForm = () => {\n// //   // const dispatch = useDispatch();\n// //   // const [name, setName] = useState('');\n// //   // const [number, setNumber] = useState('');\n// //   // const contacts = useSelector(getContact);\n\n// // const { data, error, isLoading } = useGetContactsQuery();\n// // console.log('data', data);\n// // console.log('error', error);\n// // console.log('isLoading', isLoading);\n\n\n// // const [ addContact, result] = useAddContactMutation();\n// // console.log('addContact', addContact);\n// // console.log('result', result);\n// // // const state = useSelector(state=>state)\n// // // console.log('state', state);\n\n// //   // const handleChange = evt => {\n// //   //   const { name, value } = evt.currentTarget;\n\n// //   //   switch (name) {\n// //   //     case 'name':\n// //   //       setName(value);\n// //   //       break;\n\n// //   //     case 'number':\n// //   //       setNumber(value);\n// //   //       break;\n\n// //   //     default:\n// //   //       return;\n// //   //   }\n// //   // };\n\n// //   // const handleSubmit = evt => {\n// //   //   evt.preventDefault();\n\n// //   //   if (!name.trim()) {\n// //   //     return;\n// //   //   }\n\n// //   //   const contact = {\n// //   //     id: nanoid(),\n// //   //     name: evt.currentTarget.elements.name.value,\n// //   //     number: evt.currentTarget.elements.number.value,\n// //   //   };\n\n// //   //   if (\n// //   //     contacts.find(\n// //   //       contact => contact.name.toLowerCase() === name.toLowerCase()\n// //   //     )\n// //   //   ) {\n// //   //     return alert(`${name} is already in contacts.`);\n// //   //   } else {\n// //   //     // dispatch(addContact(contact));\n// //   //   }\n\n// //   //   setName('');\n// //   //   setNumber('');\n// //   //   // evt.currentTarget.reset();\n// //   //   // evt.currentTarget.elements.number.value.reset();\n// //   // };\n\n// //   return (\n// //     <form className={css.form__basic} onSubmit={handleSubmit}>\n// //       <p>Name</p>\n// //       <input\n// //         type=\"text\"\n// //         name=\"name\"\n// //         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n// //         title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n// //         required\n// //         value={name}\n// //         onChange={handleChange}\n// //       />\n// //       <p>Number</p>\n// //       <input\n// //         type=\"tel\"\n// //         name=\"number\"\n// //         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n// //         title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n// //         required\n// //         value={number}\n// //         onChange={handleChange}\n// //       />\n\n// //       <button type=\"submit\" className={css.form__button}>\n// //         Add\n// //       </button>\n// //      </form>\n// //   );\n// // };\n\n// // export default ContactForm;\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"Contacts_contact__list__0uhxO\",\"contact__item\":\"Contacts_contact__item__Fzv+w\",\"contact__item__name\":\"Contacts_contact__item__name__wA2+2\",\"contact__item__numb\":\"Contacts_contact__item__numb__4XwKi\",\"spiner\":\"Contacts_spiner__PJ-Cv\",\"contact__btn\":\"Contacts_contact__btn__kxam6\"};","import React from 'react'; \nimport { ColorRing } from 'react-loader-spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContact, getError, getIsLoading, getFilter } from 'redux/contacts/selectors.js';\nimport { useEffect } from 'react';\nimport { deleteContacts, fetchContacts } from 'redux/contacts/operations.js';\n// import { FaHome } from \"react-icons/fa\";\n// import { FaUserPlus } from 'react-icons/fa';\nimport Notiflix from 'notiflix';\nimport css from '../Contacts/Contacts.module.css';\n\n\nconst Contacts = () => {\n  const contacts = useSelector(getContact);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n  dispatch(fetchContacts());\n    }, [dispatch]);\n\n  const getVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContact = getVisibleContact();\n\n  const handleDelete = (id, name) => {\n    dispatch(deleteContacts(id));\n    Notiflix.Notify.success(`${name} is deleted!`);\n  };\n\n  return (\n  <div className={css.spiner}>\n    {error && <p>UPS!!! Try again....{error}</p>}\n    {isLoading ? (\n      <p>\n        ...Loading\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />\n      </p>\n    ) : (\n      <div>\n      <ul className={css.contact__list}>  \n        {visibleContact.map(({ id, name, number }) => (\n          <li key={id} className={css.contact__item}>\n            <p className={css.contact__item__name}>{name}</p>\n            <p className={css.contact__item__numb}>{number}</p>\n            <button className={css.contact__btn}\n              // icon={FaUserPlus}\n              onClick={() => {handleDelete(id, name);}}\n              // disabled={result.isFetching}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n      </div>\n      )\n    }\n  </div>\n);\n \n};\n\nexport default Contacts;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // import React from 'react';\n// // import { useDispatch, useSelector } from 'react-redux';\n// // import css from '../Contacts/Contacts.module.css';\n// // // import { deleteContact } from '../../redux/contactSlice.js';\n// // import { getFilter, getContact } from '../../redux/selectors';\n// // import { useGetContactsQuery } from 'redux/contactSlice';\n\n// // const Contacts = () => {\n// //   // const dispatch = useDispatch();\n// //   // const contacts = useSelector(getContact);\n// //   // const filter = useSelector(getFilter);\n\n// //   const {data, error, isLoading} = useGetContactsQuery();\n// //   // const getVisibleContact = () => {\n// //   //   const normalizedFilter = filter.toLowerCase();\n\n// //   //   return contacts.filter(contact =>\n// //   //     contact.name.toLowerCase().includes(normalizedFilter)\n// //   //   );\n// //   // };\n\n// //   // const visibleContact = getVisibleContact();\n\n// //   // const handleDelete = id => {\n// //   //   dispatch(deleteContact(id));\n// //   //   console.log('deleteContact', deleteContact(id));\n// //   // };\n\n// //   // return (\n// //   //   <ul className={css.contact__list}>\n// //   //     {visibleContact.map(({ id, name, number }) => (\n// //   //       <li key={id} className={css.contact__item}>\n// //   //         <p className={css.contact__item__name}>{name}</p>\n// //   //         <p className={css.contact__item__numb}>{number}</p>\n// //   //         <button\n// //   //           // onClick={() => { handleDelete(id); }}\n// //   //           onClick={() => null}\n// //   //         >\n// //   //           Delete\n// //   //         </button>\n// //   //       </li>\n// //   //     ))}\n// //   //   </ul>\n// //   // );\n// // };\n\n// // export default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__item\":\"Filter_filter__item__x3n-U\",\"filter__item__name\":\"Filter_filter__item__name__nGzcn\",\"filter__item__numb\":\"Filter_filter__item__numb__Lf0P2\",\"spiner\":\"Filter_spiner__kpbGj\",\"basic\":\"Filter_basic__coys3\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/filterSlice.js';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport css from '../Filter/Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilter);\n\n  const onChange = evt => {\n    dispatch(filterContact(evt.currentTarget.value));\n    // console.log(\"evt.currentTarget.value filter\", evt.currentTarget.value)\n    };\n\n  return (\n    <div> \n      <label className={css.basic}>\n        Find contacts by name {'  '} \n        <input \n        type=\"text\" \n        name='filter'\n        placeholder='Enter name'\n        value={value} \n        onChange={onChange} />\n      </label>\n    </div>\n  );\n};\n\n\nexport default Filter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"basic\":\"ContactsPage_basic__Jv5OC\",\"basic_text\":\"ContactsPage_basic_text__7c7DV\"};","// import { RegisterForm } from 'components/RegisterForm/RegisterForm.js';\nimport { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIsLoading } from '../redux/contacts/selectors.js';\nimport { fetchContacts } from '../redux/contacts/operations.js';\nimport ContactForm from '../components/ContactForm/ContactForm.js';\nimport Contacts from '../components/Contacts/Contacts.js';\nimport Filter from '../components/Filter/Filter.js';\nimport css from './/ContactsPage.module.css';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.basic}>\n      <Helmet>\n        <title>Your contacts</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <meta\n          http-equiv=\"Content-Security-Policy\"\n          content=\"script-src 'self'\"\n        ></meta>\n      </Helmet>\n      <div >\n      <h1 className={css.basic_text}>Phonebook</h1>\n      {/* <span className={css.basic_icon}>\n          💁‍♀️\n        </span></h1> */}\n      <ContactForm />\n      <h2 className={css.basic_text}>Contacts</h2>\n      <Filter />\n      <div>{isLoading && \"Request in progress...\"}</div>\n      <Contacts /> \n      </div>\n    </div>\n  );\n}\n\n// <div className={css.basic}>\n// <h1 className={css.basic_text}>Phonebook</h1>\n//         <ContactForm />\n//         <h2 className={css.basic_text}>Contacts</h2>\n//         <Filter />\n// </div>\n"],"names":["getContact","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","dispatch","useDispatch","useState","name","setName","number","setNumber","useSelector","handleChange","evt","currentTarget","value","console","log","handleAddContact","values","preventDefault","trim","contact","id","nanoid","elements","find","toLowerCase","Notiflix","addContacts","className","css","onSubmit","type","placeholder","pattern","title","required","onChange","useEffect","fetchContacts","visibleContact","normalizedFilter","includes","getVisibleContact","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","map","onClick","deleteContacts","handleDelete","filterContact","ContactsPage","Helmet","rel","href","content"],"sourceRoot":""}